services:
  - docker:dind

stages:
  - test
  - build
  - package
  - release

include:
  template: Dependency-Scanning.gitlab-ci.yml

variables:
  CARGO_HOME: $CI_PROJECT_DIR/cargo_home
  POSTGRES_HOST: postgres
  DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:5432/$POSTGRES_DB?sslmode=disable
  RUST_ENV: test
  HOST: http://localhost:9000


cache:
  paths:
    - cargo_home/
    - server/target/
    - webapp/node_modules/


test:server:
  stage: test
  image: 'rust:1.35'
  tags:
    - docker
  script:
    - apt update && apt install -y gcc make git
    - rustup default nightly-2019-05-10
    - cp bloom.default.sane server/bloom.sane
    - make -C server test
  services:
    - postgres:11

test:webapp:
  stage: test
  image: 'node:lts'
  tags:
    - docker
  script:
    - make -C webapp install
    - make -C webapp test


build:server:
  stage: build
  image: 'rust:1.35'
  tags:
    - docker
  script:
    - apt update && apt install -y gcc make git
    - rustup default nightly-2019-05-10
    - make -C server build
  artifacts:
    paths:
    - server/dist

build:webapp:
  stage: build
  image: 'node:lts'
  tags:
    - docker
  script:
    - make -C webapp install
    - make -C webapp build
    # - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    # - make docker
    # - make docker_push
  artifacts:
    paths:
    - webapp/dist



package:docker:
  stage: package
  dependencies:
    - build:server
    - build:webapp
  image: docker:stable
  tags:
    - docker
  cache: {}
  script:
    - apk update && apk add make
    - make build_from_artifacts
    - make docker_build



release:docker:nightly:
  only:
    - schedules
  stage: release
  dependencies:
    - build:server
    - build:webapp
  image: docker:stable
  tags:
    - docker
  cache: {}
  script:
    - apk update && apk add make
    - make build_from_artifacts
    - make docker_build
    - make docker_login
    - make docker_release_nightly

release:docker:stable:
  only:
    - tags
  stage: release
  dependencies:
    - build:server
    - build:webapp
  image: docker:stable
  tags:
    - docker
  cache: {}
  script:
    - apk update && apk add make
    - make build_from_artifacts
    - make docker_build
    - make docker_login
    - make docker_release
