openapi: 3.0.1
info:
  title: Bloom API
  description: 'This is a sample server Petstore server.  You can find out more about     Swagger
    at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For
    this sample, you can use the api key `special-key` to test the authorization     filters.'
  # termsOfService: http://swagger.io/terms/
  contact:
    email: hello@bloom.sh
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
# externalDocs:
#   description: Find out more about Swagger
#   url: http://swagger.io
servers:
- url: https://api.bloom.sh


tags:
  - name: welcome
    description: Everything related to the registration flow
  - name: account
    description: Everything related to Bloom accounts



################################################################################
# ROUTES
################################################################################

paths:
  ##############################################################################
  # welcome
  ##############################################################################
  /account/v1/welcome/register:
    post:
      tags:
        - welcome
      summary: Start the registration flow
      operationId: v1_welcome_register
      requestBody:
        description: User information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterBody'
        required: true
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        400:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                  
  /account/v1/welcome/verify:
    post:
      tags:
        - welcome
      summary: Verify that given code is correct
      operationId: v1_welcome_verify
      requestBody:
        description: The code received during the `register` step
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyBody'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyResponse'
        400:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /account/v1/welcome/complete:
    post:
      tags:
        - welcome
      summary: Complete registration
      operationId: v1_welcome_complete
      requestBody:
        description: Required data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteBody'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteResponse'
                
        400:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  ##############################################################################
  # account
  ##############################################################################
  # TODO
  /account/v1/sign-in:
    post:
      tags:
        - welcome
      summary: Complete registration
      operationId: v1_account_sign_in
      requestBody:
        description: Required data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteBody'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteResponse'


  # TODO
  /account/v1/sign-out:
    post:
      tags:
        - welcome
      summary: Complete registration
      operationId: v1_account_sign_out
      requestBody:
        description: Required data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteBody'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteResponse'


  # TODO
  /account/v1/me:
    get:
      tags:
        - welcome
      summary: Complete registration
      operationId: v1_me_get
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteResponse'
    post:
      tags:
        - welcome
      summary: Complete registration
      operationId: v1_me_post
      requestBody:
        description: Required data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteBody'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteResponse'


  # TODO
  /account/v1/me/sessions:
    get:
      tags:
        - welcome
      summary: Complete registration
      operationId: v1_me_sessions
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteResponse'
                
  /account/v1/me/sessions/{session_id}/revoke:
    post:
      tags:
        - welcome
      summary: Complete registration
      operationId: v1_me_sessions_revoke
      parameters:
      - name: session_id
        in: path
        description: The id of the session
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: Required data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteBody'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteResponse'

################################################################################
# SCHEMA
################################################################################

components:
  schemas:
    RegisterBody:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
    RegisterResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                id:
                  type: string


    VerifyBody:
      type: object
      properties:
        id:
          type: string
          description: The id of the pending account created during the `register`
            step
        code:
          type: string
    VerifyResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                is_valid:
                  type: boolean
                  description: always `true`
  
  
    CompleteBody:
      type: object
      properties:
        id:
          type: string
          description: The id of the pending account created during the `register`
            step
        code:
          type: string
          description: The id of the pending account received during the `register`
            step
        username:
          type: string
          description: The username of the new account


    CompleteResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                id:
                  type: string
                  description: sessions Id
                token:
                  type: string
                  description: sessions Token


    ApiResponse:
      type: object
      properties:
        data:
          type: object
        error:
          type: object
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            error:
              type: object
              properties:
                message:
                  type: string

