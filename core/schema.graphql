"""
This schema is only used to auto genrate the struct for the communication between the core and
the apps.
"""
scalar BloomMetadata
scalar UserConnection
scalar Group
scalar BillingPlanConnection
scalar User
scalar Time
scalar Bytes


####################################################################################################
## admin
####################################################################################################

type DashboardData {
  metadata: BloomMetadata
  users: UserConnection
}

####################################################################################################
## billing
####################################################################################################


type FetchGroupProfileParams {
  id: ID!
}

type GroupBillingProfile {
  group: Group
  billingPlans: BillingPlanConnection
  stripePublicKey: String
}

type UserBillingProfile {
	user: User
	billingPlans: BillingPlanConnection
}

type NewStripeCard {
	number:   String!
  expMonth: String!
  expYear: String!
  cvc: String!
}

type AddPaymentMethodParams {
  stripePublicKey: String
  groupID: ID
  card: NewStripeCard!
}

type MyBillingProfile {
  me: User
  billingPlans: BillingPlanConnection
  stripePublicKey: String!
}


####################################################################################################
## calculator
####################################################################################################

type CalcParams {
	expression: String!
}

type CalcResult {
 result: String!
}


####################################################################################################
## calendar
####################################################################################################

type CalendarListEventsParams {
  startAt: Time
  endAt: Time
}

type CalendarCreateEventParams {
  title: String!
  location: String!
  description: String!
  startAt: Time!
  endAt: Time!
}

type CalendarDeleteEventParams {
  id: Bytes!
}


####################################################################################################
## contacts
####################################################################################################

"""
type Contacts struct {
  Contacts []Contact `json:"contacts"`
}
type CreateContactParams struct {
  DeviceID      string        `json:"deviceId"`
  FirstName     string        `json:"firstName"`
  LastName      string        `json:"lastName"`
  Notes         string        `json:"notes"`
  Birthday      *time.Time    `json:"birthday"`
  BloomUsername string        `json:"bloomUsername" db:"bloom_username"`
  Organizations Organizations `json:"organizations"`
  Addresses     Addresses     `json:"addresses"`
  Emails        Emails        `json:"emails"`
  Phones        Phones        `json:"phones"`
  Websites      Websites      `json:"websites"`
}

"""

type DeleteContactParams {
	id: Bytes!
}


####################################################################################################
## groups
####################################################################################################

type GroupsCreateParams {
  name: String!
  description: String!
}

type GroupsDeleteParams {
  groupID: ID!
}

type GroupsFetchMembersParams {
	groupID: ID!
}

type GroupsFetchDetailsParams  {
	groupID: ID!
}

type GroupsInviteUserParams  {
	groupID: ID!
  username: String!
}

type GroupsCancelInvitationParams  {
	invitationID: ID!
}

type GroupsDeclineInvitationParams  {
	invitationID: ID!
}

type GroupsRemoveMembersParams {
  groupID: ID!
  username: String!
}

type GroupsQuitParams {
  groupID: ID!
}


####################################################################################################
## kernel
####################################################################################################

type Empty {
  empty: Boolean
}


####################################################################################################
## notes
####################################################################################################

type CreateNoteParams {
  title: String!
  body: String!
  color: String!
  groupID: ID
}

type DeleteNoteParams {
	id: Bytes!
}


type NotesFindParams {
	groupID: ID
}

####################################################################################################
## preferences
####################################################################################################


type PreferencesSetParams {
  key: String!
  value: String!
}

type PreferencesGetParams {
  key: String!
}

type PreferencesDeleteParams {
  key: String!
}

####################################################################################################
## users
####################################################################################################
